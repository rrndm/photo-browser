{"version":3,"sources":["logo.svg","appService.js","User.js","List.js","App.js","reportWebVitals.js","index.js"],"names":["apiUrl","getUsers","a","doRequest","path","params","fetch","useStyles","makeStyles","theme","User","props","Card","CardContent","Typography","variant","username","color","name","CardActions","Button","size","spacer","height","spacing","List","useState","users","setUsers","length","then","res","json","jsonRes","Grid","container","map","user","item","xs","sm","md","createMuiTheme","palette","primary","main","App","classes","CssBaseline","ThemeProvider","AppBar","position","Toolbar","className","Container","maxWidth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oKAAe,I,gHCCTA,EAAS,uCAGFC,EAAQ,uCAAG,sBAAAC,EAAA,sEACTC,EAAU,SADD,mFAAH,qDAYfA,EAAS,uCAAG,WAAOC,GAAP,2BAAAF,EAAA,6DAAaG,EAAb,+BAAsB,GAAtB,SACHC,MAAM,GAAD,OAAIN,EAAJ,YAAcI,EAAd,YAAsBC,IADxB,mFAAH,sD,uCCPTE,EAAYC,aAAW,SAACC,GAAD,MAAY,MA6B1BC,MA1Bf,SAAcC,GAIZ,OAFgBJ,IAGd,eAACK,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACGJ,EAAMK,WAET,cAACF,EAAA,EAAD,CAAYC,QAAQ,YAAYE,MAAM,gBAAtC,SACGN,EAAMO,UAGX,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQN,QAAQ,WAAWE,MAAM,UAA9C,uBAGA,cAACG,EAAA,EAAD,CAAQC,KAAK,QAAQN,QAAQ,WAAWE,MAAM,UAA9C,2BCtBFV,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCa,OAAQ,CACNC,OAAQd,EAAMe,QAAQ,QA4BXC,MAxBf,WAAiB,IAAD,EACYC,mBAAS,IADrB,mBACPC,EADO,KACAC,EADA,OAEcF,mBAAS,IAFvB,gCAGcA,mBAAS,KAHvB,mBAad,OAbc,UAKEnB,IAEK,IAAjBoB,EAAME,QACR5B,IACC6B,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAaL,EAASK,MAI5B,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACX,QAAS,EAAzB,SACGG,EAAMS,KAAI,SAACC,GAAD,OACT,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAYC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAzC,SACE,cAAC,EAAD,eAAUJ,KADIA,SClBlB5B,EAAQiC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,cAKNtC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCa,OAAQ,CACNC,OAAQd,EAAMe,QAAQ,QAyBXsB,MArBf,WACE,IAAMC,EAAUxC,IAEhB,OACE,gCACE,cAACyC,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAexC,MAAOA,EAAtB,UACE,cAACyC,EAAA,EAAD,CAAQC,SAAS,WAAjB,SACE,cAACC,EAAA,EAAD,UACE,cAACtC,EAAA,EAAD,CAAYC,QAAQ,KAApB,+BAGJ,qBAAKsC,UAAWN,EAAQzB,SACxB,cAACgC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAAC,EAAD,aC5BKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b4b866c8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","//TODO move to .env\r\nconst apiUrl = \"https://jsonplaceholder.typicode.com\"\r\n\r\n\r\nexport const getUsers = async () => {\r\n  return await doRequest(\"users\")\r\n}\r\n\r\nexport const getAlbums = async (userId) => {\r\n\r\n}\r\n\r\nexport const getPhotos = async (albumId) => {\r\n\r\n}\r\n\r\nconst doRequest = async (path, params = \"\") => {\r\n  return await fetch(`${apiUrl}/${path}?${params}`)\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n}));\r\n\r\nfunction User(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant=\"h6\">\r\n          {props.username}\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n          {props.name}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\" variant=\"outlined\" color=\"primary\">\r\n          More info\r\n        </Button>\r\n        <Button size=\"small\" variant=\"outlined\" color=\"primary\">\r\n          Albums\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { getUsers, getAlbums, getPhotos } from './appService.js'\r\nimport User from './User.js'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  spacer: {\r\n    height: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nfunction List() {\r\n  const [users, setUsers] = useState([])\r\n  const [albums, setAlbums] = useState([])\r\n  const [photos, setPhotos] = useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  if (users.length === 0) {\r\n    getUsers()\r\n    .then((res) => res.json())\r\n    .then((jsonRes) => setUsers(jsonRes))\r\n }\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      {users.map((user) => (\r\n        <Grid item key={user} xs={12} sm={6} md={3}>\r\n          <User {...user}/>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import logo from './logo.svg';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport List from './List.js'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#333333'\r\n    }\r\n  }\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  spacer: {\r\n    height: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <ThemeProvider theme={theme}>\r\n        <AppBar position=\"relative\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\">Photo Browser</Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div className={classes.spacer}/>\r\n        <Container maxWidth=\"md\">\r\n          <List/>\r\n        </Container>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}